classdef PEMgridGenerator2D < PEMgridGenerator


    properties

        % Length in x and y directions
        xlength
        ylength

        % Discretization numbers in x and y directions
        Nx      
        Ny
        
    end
    
    methods

        function gen = PEMgridGenerator2D()
            
            gen = gen@PEMgridGenerator();
            
        end

        function [paramobj, gen] = updatePEMinputParams(gen, paramobj, params)

            paramobj = gen.setupPEMinputParams(paramobj, []);
            
        end

        function [paramobj, gen] = setupGrid(gen, paramobj, params)
            
            G = cartGrid([gen.Nx, gen.Ny], [gen.xlength, gen.ylength]);
            G = computeGeometry(G);
            
            paramobj.G = G;
            gen.G = G;
            
        end
        
        function paramobj = setupElectrolyte(gen, paramobj, params)
        % Method that setups the grid and the coupling for the electrolyte model

            ncells = gen.G.cells.num;
            params.cellind = (1 : ncells)';
            paramobj = setupElectrolyte@PEMgridGenerator(gen, paramobj, params);
            
        end

        function paramobj = setupElectrodeElectrolyteCoupTerm(gen, paramobj, params)

            an    = 'Anode';
            ct    = 'Cathode';
            elyte = 'Electrolyte';
            
            G = paramobj.Electrolyte.G;

            Nx = gen.Nx;
            Ny = gen.Ny;

            % The following setup is correct but not very robust as it assumes knowledge of the cartesian structure of
            % the grid generated by cartGrid.
            
            params.(an).couplingcells = 1 + Nx*(0 : (Ny - 1))';
            params.(an).couplingfaces = 1 + (Nx + 1)*(0 : (Ny - 1))';
            params.(ct).couplingcells = Nx + Nx*(0 : (Ny - 1))';
            params.(ct).couplingfaces = (Nx + 1) + (Nx + 1)*(0 : (Ny - 1))';

            paramobj = setupElectrodeElectrolyteCoupTerm@PEMgridGenerator(gen, paramobj, params);
            
        end

        
    end
    
    
end
