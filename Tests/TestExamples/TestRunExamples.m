classdef TestRunExamples < matlab.unittest.TestCase

    properties (TestParameter)

        % List of all the supported scripts

        filename = {'battMoTutorial'                                  , ...
                    'runBatteryMLP'                                   , ...
                    'runBatteryP2D'                                   , ...
                    'runBatteryP3D'                                   , ...
                    'runBatteryP4D'                                   , ...
                    'runBatteryPrecondTestP2D'                        , ...
                    'runChen2020'                                     , ...
                    'runCR'                                           , ...
                    'runGittTest'                                     , ...
                    'runJellyRoll'                                    , ...
                    'runSector'                                       , ...
                    'runActiveMaterial'                               , ...
                    'runSafariSEIActiveMaterial'                      , ...
                    'runBolaySEIActiveMaterial'                       , ...
                    'runSiliconGraphiteBattery'                       , ...
                    'runBatteryLinearSolve'                           , ...
                    'runJsonFunction'                                 , ...
                    'runJsonScript'                                   , ...
                    'runJuliaBridgeTest'                              , ...
                    'runBatteryP3DMech'                               , ...
                    'runBattery1DOptimize'                            , ...
                    'runParameterIdentification'                      , ...
                    'runElectrolyser'                                 , ...
                    'runConductorBlockExample'                        , ...
                    'runRegionBruggemanExample'                       , ...
                    'magnesium_script'                                , ...
                    'exampleControl_doc'                              , ...
                    'plotControlExamples_doc'                         , ...
                    'plotGeometries_doc'                              , ...
                    'runExample3D_doc'                                , ...
                    'runSafariSEI'                                    , ...
                    'runBolaySEI'                                     , ...
                    'runBolaySEI0'                                    , ...
                    'tutorial_1_a_simple_p2d_model_live'              , ...
                    'tutorial_2_changing_control_protocol_live'       , ...
                    'tutorial_3_modify_structural_parameters_live'    , ...
                    'tutorial_4_modify_material_parameters_live'      , ...
                    'tutorial_5_simulate_CCCV_cycling_live'           , ...
                    'tutorial_6_simulate_thermal_performance_live'    , ...
                    'tutorial_7_a_simple_p4d_model_live'              , ...
                    'tutorial_8_simulate_a_multilayer_pouch_cell_live', ...
                    'tutorial_9_simulate_a_cylindrical_cell_live'};
    end

    properties

        % Scripts that are not yet fully supported

        exclude = {'runJellyRollLinearSolve', ...
                   'runSingleParticleSEI'   , ...
                   'runDissElectrolyser'};

    end

    methods (Test)

        function testRunExample(test, filename)

            run(fullfile(battmoDir, 'startupBattMo.m'));

            if ~contains(filename, test.exclude)
                % FIXME Disable plotting
                set(0, 'defaultFigureVisible', 'off');
                fprintf('\n\nRunning %s...\n\n', filename);
                run(filename);
                close all
                set(0, 'defaultFigureVisible', 'on');
            end

        end

    end

end



%{
Copyright 2021-2024 SINTEF Industry, Sustainable Energy Technology
and SINTEF Digital, Mathematics & Cybernetics.

This file is part of The Battery Modeling Toolbox BattMo

BattMo is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

BattMo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with BattMo.  If not, see <http://www.gnu.org/licenses/>.
%}
